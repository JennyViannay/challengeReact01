{"id":"../node_modules/react-range/lib/utils.js","dependencies":[{"name":"/home/wilder/Bureau/React/challengeReact01/package.json","includedInParent":true,"mtime":1574069865378},{"name":"/home/wilder/Bureau/React/challengeReact01/node_modules/react-range/package.json","includedInParent":true,"mtime":1574069864926},{"name":"react","loc":{"line":3,"column":22},"parent":"/home/wilder/Bureau/React/challengeReact01/node_modules/react-range/lib/utils.js","resolved":"/home/wilder/Bureau/React/challengeReact01/node_modules/react/index.js"},{"name":"./types","loc":{"line":4,"column":22},"parent":"/home/wilder/Bureau/React/challengeReact01/node_modules/react-range/lib/utils.js","resolved":"/home/wilder/Bureau/React/challengeReact01/node_modules/react-range/lib/types.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar types_1 = require(\"./types\");\nfunction isTouchEvent(event) {\n    return ((event.touches && event.touches.length) ||\n        (event.changedTouches && event.changedTouches.length));\n}\nexports.isTouchEvent = isTouchEvent;\nfunction normalizeValue(value, index, min, max, step, allowOverlap, values) {\n    var BIG_NUM = 10e10;\n    value = Math.round(value * BIG_NUM) / BIG_NUM;\n    if (!allowOverlap) {\n        var prev = values[index - 1];\n        var next = values[index + 1];\n        if (prev && prev > value)\n            return prev;\n        if (next && next < value)\n            return next;\n    }\n    if (value > max)\n        return max;\n    if (value < min)\n        return min;\n    var remainder = Math.round(value * BIG_NUM) % Math.round(step * BIG_NUM);\n    var closestBigNum = Math.round(value * BIG_NUM - remainder);\n    var rounded = remainder === 0 ? value : closestBigNum / BIG_NUM;\n    var res = Math.abs(remainder / BIG_NUM) < step / 2\n        ? rounded\n        : rounded + step * Math.sign(value);\n    var afterDot = step.toString().split('.')[1];\n    return afterDot ? parseFloat(res.toFixed(afterDot.length)) : res;\n}\nexports.normalizeValue = normalizeValue;\nfunction relativeValue(value, min, max) {\n    return (value - min) / (max - min);\n}\nexports.relativeValue = relativeValue;\nfunction isVertical(direction) {\n    return direction === types_1.Direction.Up || direction === types_1.Direction.Down;\n}\nexports.isVertical = isVertical;\nfunction checkBoundaries(value, min, max) {\n    if (min >= max) {\n        throw new RangeError(\"min (\" + min + \") is equal/bigger than max (\" + max + \")\");\n    }\n    if (value < min) {\n        throw new RangeError(\"value (\" + value + \") is smaller than min (\" + min + \")\");\n    }\n    if (value > max) {\n        throw new RangeError(\"value (\" + value + \") is bigger than max (\" + max + \")\");\n    }\n}\nexports.checkBoundaries = checkBoundaries;\nfunction checkInitialOverlap(values) {\n    if (values.length < 2)\n        return;\n    if (!values.slice(1).every(function (item, i) { return values[i] <= item; })) {\n        throw new RangeError(\"values={[\" + values + \"]} needs to be sorted when allowOverlap={false}\");\n    }\n}\nexports.checkInitialOverlap = checkInitialOverlap;\nfunction getMargin(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['margin-top'], 10),\n        bottom: parseInt(style['margin-bottom'], 10),\n        left: parseInt(style['margin-left'], 10),\n        right: parseInt(style['margin-right'], 10)\n    };\n}\nexports.getMargin = getMargin;\nfunction getPadding(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['padding-top'], 10),\n        bottom: parseInt(style['padding-bottom'], 10),\n        left: parseInt(style['padding-left'], 10),\n        right: parseInt(style['padding-right'], 10)\n    };\n}\nexports.getPadding = getPadding;\nfunction translateThumbs(elements, offsets, rtl) {\n    var inverter = rtl ? -1 : 1;\n    elements.forEach(function (element, index) {\n        return translate(element, inverter * offsets[index].x, offsets[index].y);\n    });\n}\nexports.translateThumbs = translateThumbs;\nfunction translate(element, x, y) {\n    element.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n}\nexports.translate = translate;\n// adapted from https://github.com/alexreardon/raf-schd\nexports.schd = function (fn) {\n    var lastArgs = [];\n    var frameId = null;\n    var wrapperFn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        lastArgs = args;\n        if (frameId) {\n            return;\n        }\n        frameId = requestAnimationFrame(function () {\n            frameId = null;\n            fn.apply(void 0, lastArgs);\n        });\n    };\n    return wrapperFn;\n};\nfunction replaceAt(values, index, value) {\n    var ret = values.slice(0);\n    ret[index] = value;\n    return ret;\n}\nexports.replaceAt = replaceAt;\nfunction getTrackBackground(_a) {\n    var values = _a.values, colors = _a.colors, min = _a.min, max = _a.max, _b = _a.direction, direction = _b === void 0 ? types_1.Direction.Right : _b, _c = _a.rtl, rtl = _c === void 0 ? false : _c;\n    if (rtl && direction === types_1.Direction.Right) {\n        direction = types_1.Direction.Left;\n    }\n    else if (rtl && types_1.Direction.Left) {\n        direction = types_1.Direction.Right;\n    }\n    var progress = values.map(function (value) { return ((value - min) / (max - min)) * 100; });\n    var middle = progress.reduce(function (acc, point, index) {\n        return acc + \", \" + colors[index] + \" \" + point + \"%, \" + colors[index + 1] + \" \" + point + \"%\";\n    }, '');\n    return \"linear-gradient(\" + direction + \", \" + colors[0] + \" 0%\" + middle + \", \" + colors[colors.length - 1] + \" 100%)\";\n}\nexports.getTrackBackground = getTrackBackground;\nfunction voidFn() { }\nexports.voidFn = voidFn;\nfunction assertUnreachable(x) {\n    throw new Error(\"Didn't expect to get here\");\n}\nexports.assertUnreachable = assertUnreachable;\n/**\n * Util function for grabbing the true largest width of a thumb\n * including the label\n * @param thumbEl - Thumb element to grab the largest width from\n * @param value - Thumb value, not label value\n * @param separator - Label separator value\n */\nvar getThumbWidth = function (thumbEl, value, separator) {\n    var width = Math.ceil([thumbEl].concat(Array.from(thumbEl.children)).reduce(function (width, el) {\n        var elWidth = Math.ceil(el.getBoundingClientRect().width);\n        /**\n         * If a label contains a merged label value, it won't return the true\n         * label width for that Thumb. Clone the label and change the value\n         * to that individual Thumb value in order to grab the true width.\n         */\n        if (el.innerText.includes(separator) &&\n            el.childElementCount === 0) {\n            var elClone = el.cloneNode(true);\n            elClone.innerHTML = value.toFixed(1);\n            elClone.style.visibility = 'hidden';\n            document.body.append(elClone);\n            elWidth = Math.ceil(elClone.getBoundingClientRect().width);\n            elClone.remove();\n        }\n        return elWidth > width ? elWidth : width;\n    }, thumbEl.getBoundingClientRect().width));\n    return width;\n};\n/**\n * Bulk of logic for thumb overlaps\n * Consider a scenario with 5 thumbs;\n * Thumb 1 overlaps with thumb 0 and thumb 2\n * Thumb 2 overlaps with thumb 3\n * We need an array that contains [0, 1, 2, 3]\n * The function needs to return the directly overlapping thumbs\n * and all thumbs overlapping linked to those and so on\n * @param index - Thumb index calculating overlaps for\n * @param offsets - Current Array of Thumb offsets for Range\n * @param thumbs - Array of Thumb elements\n * @param values - Array of Thumb values\n * @param separator - String separator for merged label values\n * @returns overlaps - Array of all overlapping thumbs from the index\n */\nvar getOverlaps = function (index, offsets, thumbs, values, separator) {\n    var overlaps = [];\n    /**\n     * Recursive function for building the overlaps Array\n     * If an overlap is found, find the overlaps for that overlap\n     * @param thumbIndex current Thumb index to find overlaps from\n     */\n    var buildOverlaps = function (thumbIndex) {\n        var thumbXWidth = getThumbWidth(thumbs[thumbIndex], values[thumbIndex], separator);\n        var thumbX = offsets[thumbIndex].x;\n        /**\n         * Iterate through the Thumb offsets, if there is a match\n         * add the thumbIndex and siblingIndex to the overlaps Array\n         *\n         * Then build overlaps from the overlapping siblingIndex\n         */\n        offsets.forEach(function (_a, siblingIndex) {\n            var siblingX = _a.x;\n            var siblingWidth = getThumbWidth(thumbs[siblingIndex], values[siblingIndex], separator);\n            if (thumbIndex !== siblingIndex &&\n                ((thumbX >= siblingX && thumbX <= siblingX + siblingWidth) ||\n                    (thumbX + thumbXWidth >= siblingX &&\n                        thumbX + thumbXWidth <= siblingX + siblingWidth))) {\n                if (!overlaps.includes(siblingIndex)) {\n                    overlaps.push(thumbIndex);\n                    overlaps.push(siblingIndex);\n                    overlaps = overlaps.concat([thumbIndex, siblingIndex]);\n                    buildOverlaps(siblingIndex);\n                }\n            }\n        });\n    };\n    buildOverlaps(index);\n    // Sort and remove duplicates from the built overlaps\n    return Array.from(new Set(overlaps.sort()));\n};\n/**\n * A custom React Hook for calculating whether a thumb overlaps\n * another and whether labels could/should merge.\n * @param rangeRef - React ref value of Range component\n * @param values - current Range values Array\n * @param index - thumb index\n * @param separator - string to separate thumb values\n * @returns label value + styling for thumb label\n */\nexports.useThumbOverlap = function (rangeRef, values, index, separator) {\n    if (separator === void 0) { separator = ' - '; }\n    // Create initial label style and value. Label value defaults to thumb value\n    var _a = react_1.useState({}), labelStyle = _a[0], setLabelStyle = _a[1];\n    var _b = react_1.useState(values[index].toFixed(1)), labelValue = _b[0], setLabelValue = _b[1];\n    // When the rangeRef or values change, update the Thumb label values and styling\n    react_1.useEffect(function () {\n        if (rangeRef) {\n            var thumbs = rangeRef.getThumbs();\n            if (thumbs.length < 1)\n                return;\n            var newStyle = {};\n            var offsets_1 = rangeRef.getOffsets();\n            /**\n             * Get any overlaps for the given Thumb index. This must return all linked\n             * Thumbs. So if there are 4 Thumbs and Thumbs 2, 3 and 4 overlap. If we are\n             * getting the overlaps for Thumb 1 and it overlaps only Thumb 2, we must get\n             * 2, 3 and 4 also.\n             */\n            var overlaps = getOverlaps(index, offsets_1, thumbs, values, separator);\n            // Set a default label value of the Thumb value\n            var labelValue_1 = values[index].toFixed(1);\n            /**\n             * If there are overlaps for the Thumb, we need to calculate the correct\n             * Label value along with the relevant styling. We only want to show a Label\n             * for the left most Thumb in an overlapping set.\n             * All other Thumbs will be set to display: none.\n             */\n            if (overlaps.length) {\n                /**\n                 * Get an Array of the offsets for the overlapping Thumbs\n                 * This is so we can determine if the Thumb we are looking at\n                 * is the left most thumb in an overlapping set\n                 */\n                var offsetsX = overlaps.reduce(function (a, c, i, s) {\n                    return a.length ? a.concat([offsets_1[s[i]].x]) : [offsets_1[s[i]].x];\n                }, []);\n                /**\n                 * If our Thumb is the left most Thumb, we can build a Label value\n                 * and set the style for that Label\n                 */\n                if (Math.min.apply(Math, offsetsX) === offsets_1[index].x) {\n                    /**\n                     * First calculate the Label value. To do this,\n                     * grab all the values for the Thumbs in our overlaps.\n                     * Then convert that to a Set and sort it whilst removing duplicates.\n                     */\n                    var labelValues_1 = [];\n                    overlaps.forEach(function (thumb) {\n                        labelValues_1.push(values[thumb].toFixed(1));\n                    });\n                    /**\n                     *  Update the labelValue with the resulting Array\n                     *  joined by our defined separator\n                     */\n                    labelValue_1 = Array.from(new Set(labelValues_1.sort(function (a, b) { return parseFloat(a) - parseFloat(b); }))).join(separator);\n                    /**\n                     * Lastly, build the label styling. The label styling will\n                     * position the label and apply a transform so that it's centered.\n                     * We want the center point between the left edge of the left most Thumb\n                     * and the right edge of the right most Thumb.\n                     */\n                    var first = Math.min.apply(Math, offsetsX);\n                    var last = Math.max.apply(Math, offsetsX);\n                    var lastWidth = thumbs[overlaps[offsetsX.indexOf(last)]].getBoundingClientRect().width;\n                    newStyle.left = Math.abs(first - (last + lastWidth)) / 2 + \"px\";\n                    newStyle.transform = 'translate(-50%, 0)';\n                }\n                else {\n                    // If the Thumb isn't the left most Thumb, hide the Label!\n                    newStyle.visibility = 'hidden';\n                }\n            }\n            // Update the label value and style\n            setLabelValue(labelValue_1);\n            setLabelStyle(newStyle);\n        }\n    }, [rangeRef, values]);\n    return [labelValue, labelStyle];\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-range/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/react-range/lib/utils.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}}],"sources":{"../node_modules/react-range/lib/utils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar types_1 = require(\"./types\");\nfunction isTouchEvent(event) {\n    return ((event.touches && event.touches.length) ||\n        (event.changedTouches && event.changedTouches.length));\n}\nexports.isTouchEvent = isTouchEvent;\nfunction normalizeValue(value, index, min, max, step, allowOverlap, values) {\n    var BIG_NUM = 10e10;\n    value = Math.round(value * BIG_NUM) / BIG_NUM;\n    if (!allowOverlap) {\n        var prev = values[index - 1];\n        var next = values[index + 1];\n        if (prev && prev > value)\n            return prev;\n        if (next && next < value)\n            return next;\n    }\n    if (value > max)\n        return max;\n    if (value < min)\n        return min;\n    var remainder = Math.round(value * BIG_NUM) % Math.round(step * BIG_NUM);\n    var closestBigNum = Math.round(value * BIG_NUM - remainder);\n    var rounded = remainder === 0 ? value : closestBigNum / BIG_NUM;\n    var res = Math.abs(remainder / BIG_NUM) < step / 2\n        ? rounded\n        : rounded + step * Math.sign(value);\n    var afterDot = step.toString().split('.')[1];\n    return afterDot ? parseFloat(res.toFixed(afterDot.length)) : res;\n}\nexports.normalizeValue = normalizeValue;\nfunction relativeValue(value, min, max) {\n    return (value - min) / (max - min);\n}\nexports.relativeValue = relativeValue;\nfunction isVertical(direction) {\n    return direction === types_1.Direction.Up || direction === types_1.Direction.Down;\n}\nexports.isVertical = isVertical;\nfunction checkBoundaries(value, min, max) {\n    if (min >= max) {\n        throw new RangeError(\"min (\" + min + \") is equal/bigger than max (\" + max + \")\");\n    }\n    if (value < min) {\n        throw new RangeError(\"value (\" + value + \") is smaller than min (\" + min + \")\");\n    }\n    if (value > max) {\n        throw new RangeError(\"value (\" + value + \") is bigger than max (\" + max + \")\");\n    }\n}\nexports.checkBoundaries = checkBoundaries;\nfunction checkInitialOverlap(values) {\n    if (values.length < 2)\n        return;\n    if (!values.slice(1).every(function (item, i) { return values[i] <= item; })) {\n        throw new RangeError(\"values={[\" + values + \"]} needs to be sorted when allowOverlap={false}\");\n    }\n}\nexports.checkInitialOverlap = checkInitialOverlap;\nfunction getMargin(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['margin-top'], 10),\n        bottom: parseInt(style['margin-bottom'], 10),\n        left: parseInt(style['margin-left'], 10),\n        right: parseInt(style['margin-right'], 10)\n    };\n}\nexports.getMargin = getMargin;\nfunction getPadding(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['padding-top'], 10),\n        bottom: parseInt(style['padding-bottom'], 10),\n        left: parseInt(style['padding-left'], 10),\n        right: parseInt(style['padding-right'], 10)\n    };\n}\nexports.getPadding = getPadding;\nfunction translateThumbs(elements, offsets, rtl) {\n    var inverter = rtl ? -1 : 1;\n    elements.forEach(function (element, index) {\n        return translate(element, inverter * offsets[index].x, offsets[index].y);\n    });\n}\nexports.translateThumbs = translateThumbs;\nfunction translate(element, x, y) {\n    element.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n}\nexports.translate = translate;\n// adapted from https://github.com/alexreardon/raf-schd\nexports.schd = function (fn) {\n    var lastArgs = [];\n    var frameId = null;\n    var wrapperFn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        lastArgs = args;\n        if (frameId) {\n            return;\n        }\n        frameId = requestAnimationFrame(function () {\n            frameId = null;\n            fn.apply(void 0, lastArgs);\n        });\n    };\n    return wrapperFn;\n};\nfunction replaceAt(values, index, value) {\n    var ret = values.slice(0);\n    ret[index] = value;\n    return ret;\n}\nexports.replaceAt = replaceAt;\nfunction getTrackBackground(_a) {\n    var values = _a.values, colors = _a.colors, min = _a.min, max = _a.max, _b = _a.direction, direction = _b === void 0 ? types_1.Direction.Right : _b, _c = _a.rtl, rtl = _c === void 0 ? false : _c;\n    if (rtl && direction === types_1.Direction.Right) {\n        direction = types_1.Direction.Left;\n    }\n    else if (rtl && types_1.Direction.Left) {\n        direction = types_1.Direction.Right;\n    }\n    var progress = values.map(function (value) { return ((value - min) / (max - min)) * 100; });\n    var middle = progress.reduce(function (acc, point, index) {\n        return acc + \", \" + colors[index] + \" \" + point + \"%, \" + colors[index + 1] + \" \" + point + \"%\";\n    }, '');\n    return \"linear-gradient(\" + direction + \", \" + colors[0] + \" 0%\" + middle + \", \" + colors[colors.length - 1] + \" 100%)\";\n}\nexports.getTrackBackground = getTrackBackground;\nfunction voidFn() { }\nexports.voidFn = voidFn;\nfunction assertUnreachable(x) {\n    throw new Error(\"Didn't expect to get here\");\n}\nexports.assertUnreachable = assertUnreachable;\n/**\n * Util function for grabbing the true largest width of a thumb\n * including the label\n * @param thumbEl - Thumb element to grab the largest width from\n * @param value - Thumb value, not label value\n * @param separator - Label separator value\n */\nvar getThumbWidth = function (thumbEl, value, separator) {\n    var width = Math.ceil([thumbEl].concat(Array.from(thumbEl.children)).reduce(function (width, el) {\n        var elWidth = Math.ceil(el.getBoundingClientRect().width);\n        /**\n         * If a label contains a merged label value, it won't return the true\n         * label width for that Thumb. Clone the label and change the value\n         * to that individual Thumb value in order to grab the true width.\n         */\n        if (el.innerText.includes(separator) &&\n            el.childElementCount === 0) {\n            var elClone = el.cloneNode(true);\n            elClone.innerHTML = value.toFixed(1);\n            elClone.style.visibility = 'hidden';\n            document.body.append(elClone);\n            elWidth = Math.ceil(elClone.getBoundingClientRect().width);\n            elClone.remove();\n        }\n        return elWidth > width ? elWidth : width;\n    }, thumbEl.getBoundingClientRect().width));\n    return width;\n};\n/**\n * Bulk of logic for thumb overlaps\n * Consider a scenario with 5 thumbs;\n * Thumb 1 overlaps with thumb 0 and thumb 2\n * Thumb 2 overlaps with thumb 3\n * We need an array that contains [0, 1, 2, 3]\n * The function needs to return the directly overlapping thumbs\n * and all thumbs overlapping linked to those and so on\n * @param index - Thumb index calculating overlaps for\n * @param offsets - Current Array of Thumb offsets for Range\n * @param thumbs - Array of Thumb elements\n * @param values - Array of Thumb values\n * @param separator - String separator for merged label values\n * @returns overlaps - Array of all overlapping thumbs from the index\n */\nvar getOverlaps = function (index, offsets, thumbs, values, separator) {\n    var overlaps = [];\n    /**\n     * Recursive function for building the overlaps Array\n     * If an overlap is found, find the overlaps for that overlap\n     * @param thumbIndex current Thumb index to find overlaps from\n     */\n    var buildOverlaps = function (thumbIndex) {\n        var thumbXWidth = getThumbWidth(thumbs[thumbIndex], values[thumbIndex], separator);\n        var thumbX = offsets[thumbIndex].x;\n        /**\n         * Iterate through the Thumb offsets, if there is a match\n         * add the thumbIndex and siblingIndex to the overlaps Array\n         *\n         * Then build overlaps from the overlapping siblingIndex\n         */\n        offsets.forEach(function (_a, siblingIndex) {\n            var siblingX = _a.x;\n            var siblingWidth = getThumbWidth(thumbs[siblingIndex], values[siblingIndex], separator);\n            if (thumbIndex !== siblingIndex &&\n                ((thumbX >= siblingX && thumbX <= siblingX + siblingWidth) ||\n                    (thumbX + thumbXWidth >= siblingX &&\n                        thumbX + thumbXWidth <= siblingX + siblingWidth))) {\n                if (!overlaps.includes(siblingIndex)) {\n                    overlaps.push(thumbIndex);\n                    overlaps.push(siblingIndex);\n                    overlaps = overlaps.concat([thumbIndex, siblingIndex]);\n                    buildOverlaps(siblingIndex);\n                }\n            }\n        });\n    };\n    buildOverlaps(index);\n    // Sort and remove duplicates from the built overlaps\n    return Array.from(new Set(overlaps.sort()));\n};\n/**\n * A custom React Hook for calculating whether a thumb overlaps\n * another and whether labels could/should merge.\n * @param rangeRef - React ref value of Range component\n * @param values - current Range values Array\n * @param index - thumb index\n * @param separator - string to separate thumb values\n * @returns label value + styling for thumb label\n */\nexports.useThumbOverlap = function (rangeRef, values, index, separator) {\n    if (separator === void 0) { separator = ' - '; }\n    // Create initial label style and value. Label value defaults to thumb value\n    var _a = react_1.useState({}), labelStyle = _a[0], setLabelStyle = _a[1];\n    var _b = react_1.useState(values[index].toFixed(1)), labelValue = _b[0], setLabelValue = _b[1];\n    // When the rangeRef or values change, update the Thumb label values and styling\n    react_1.useEffect(function () {\n        if (rangeRef) {\n            var thumbs = rangeRef.getThumbs();\n            if (thumbs.length < 1)\n                return;\n            var newStyle = {};\n            var offsets_1 = rangeRef.getOffsets();\n            /**\n             * Get any overlaps for the given Thumb index. This must return all linked\n             * Thumbs. So if there are 4 Thumbs and Thumbs 2, 3 and 4 overlap. If we are\n             * getting the overlaps for Thumb 1 and it overlaps only Thumb 2, we must get\n             * 2, 3 and 4 also.\n             */\n            var overlaps = getOverlaps(index, offsets_1, thumbs, values, separator);\n            // Set a default label value of the Thumb value\n            var labelValue_1 = values[index].toFixed(1);\n            /**\n             * If there are overlaps for the Thumb, we need to calculate the correct\n             * Label value along with the relevant styling. We only want to show a Label\n             * for the left most Thumb in an overlapping set.\n             * All other Thumbs will be set to display: none.\n             */\n            if (overlaps.length) {\n                /**\n                 * Get an Array of the offsets for the overlapping Thumbs\n                 * This is so we can determine if the Thumb we are looking at\n                 * is the left most thumb in an overlapping set\n                 */\n                var offsetsX = overlaps.reduce(function (a, c, i, s) {\n                    return a.length ? a.concat([offsets_1[s[i]].x]) : [offsets_1[s[i]].x];\n                }, []);\n                /**\n                 * If our Thumb is the left most Thumb, we can build a Label value\n                 * and set the style for that Label\n                 */\n                if (Math.min.apply(Math, offsetsX) === offsets_1[index].x) {\n                    /**\n                     * First calculate the Label value. To do this,\n                     * grab all the values for the Thumbs in our overlaps.\n                     * Then convert that to a Set and sort it whilst removing duplicates.\n                     */\n                    var labelValues_1 = [];\n                    overlaps.forEach(function (thumb) {\n                        labelValues_1.push(values[thumb].toFixed(1));\n                    });\n                    /**\n                     *  Update the labelValue with the resulting Array\n                     *  joined by our defined separator\n                     */\n                    labelValue_1 = Array.from(new Set(labelValues_1.sort(function (a, b) { return parseFloat(a) - parseFloat(b); }))).join(separator);\n                    /**\n                     * Lastly, build the label styling. The label styling will\n                     * position the label and apply a transform so that it's centered.\n                     * We want the center point between the left edge of the left most Thumb\n                     * and the right edge of the right most Thumb.\n                     */\n                    var first = Math.min.apply(Math, offsetsX);\n                    var last = Math.max.apply(Math, offsetsX);\n                    var lastWidth = thumbs[overlaps[offsetsX.indexOf(last)]].getBoundingClientRect().width;\n                    newStyle.left = Math.abs(first - (last + lastWidth)) / 2 + \"px\";\n                    newStyle.transform = 'translate(-50%, 0)';\n                }\n                else {\n                    // If the Thumb isn't the left most Thumb, hide the Label!\n                    newStyle.visibility = 'hidden';\n                }\n            }\n            // Update the label value and style\n            setLabelValue(labelValue_1);\n            setLabelStyle(newStyle);\n        }\n    }, [rangeRef, values]);\n    return [labelValue, labelStyle];\n};\n"},"lineCount":309}},"error":null,"hash":"310ee4aba752d531133bb147b38e6d3b","cacheData":{"env":{}}}